import type { GetStaticProps, InferGetStaticPropsType, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { signIn, signOut, useSession } from "next-auth/react";
import { trpc } from "../utils/trpc";
import { ShoppingCartIcon } from "@heroicons/react/24/outline";
import { useState } from "react";
import AsideButtons from "../components/AsideButtons";
import ItemsCategory from "../components/ItemsCategory";
import Link from "next/link";
import itemsJson from "../../public/items.json";
import ItemCard from "../components/ItemCard";

const Home: NextPage = () => {
  // const hello = trpc.example.hello.useQuery({ text: "from tRPC" });

  const [asideSelection, setAsideSelection] = useState(
    {
      items: true,
      history: false,
      statistics: false,
    }
  );
  const [isCartPressed, setIsCartPressed] = useState(false);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/devchallenges.png" />
      </Head>

      <div className='flex'>
        <aside className='fixed grid grid-rows-[auto_1fr_auto] items-center h-screen w-16 py-4 bg-aside-light dark:bg-aside-dark text-primary-light dark:text-primary-dark fill-primary-light dark:fill-primary-dark shadow-2xl'>
          <Link
            href='/'>
            <a className='flex mx-auto'>
              <Image className='self-start rounded-full' src='/logo.svg' alt='logo' width={40} height={38} />
            </a>
          </Link>
          <AsideButtons asideSelection={asideSelection} setAsideSelection={setAsideSelection} />
          <button
            className='justify-self-center transition-all duration-100 ease-linear bg-custom-orange rounded-full p-2 hover:shadow-shopping-cart dark:hover:shadow-shopping-cart-dark hover:scale-110 active:scale-105'
            onClick={() => setIsCartPressed(!isCartPressed)}>
            <ShoppingCartIcon className='w-5 h-5 stroke-2 text-white drop-shadow' />
          </button>
        </aside>

        <main className='ml-16 px-3 py-9 flex-1 min-h-screen flex flex-col text-primary-light dark:text-primary-dark space-y-4'>
          {asideSelection.items && (
            <>
              {itemsJson.categories.map((category) => (
                <ItemsCategory key={category.id} categoryTitle={category.name}>
                  {category.items.map((item) => (
                    <ItemCard key={item.id} title={item.name} />
                  ))}
                </ItemsCategory>
              ))}
            </>
          )}
          {asideSelection.history && (
            <>
            </>
          )}
          {asideSelection.statistics && (
            <>
            </>
          )}
        </main>

        <aside className={`ml-16 p-4 fixed inset-0 rounded-l-2xl bg-shopping-list-light dark:bg-shopping-list-dark text-shopping-list-text dark:text-shopping-list-text-dark font-medium transition-all duration-200 ${isCartPressed || 'invisible translate-x-1/4 opacity-0'}`}>
          <div className='flex items-center'>
            <Image src='/source.svg' alt='bottle logo' width={81} height={135} />
            <div>
              <h3>Didn&apos;t find what you need?</h3>
              <button className=''>
                Add item
              </button>
            </div>
          </div>
          <h2 className='text-2xl font-bold'>Shopping List</h2>
        </aside>
      </div>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery();

//   const { data: sessionData } = useSession();

//   return (
//     <div className="flex flex-col items-center justify-center gap-2">
//       {sessionData && (
//         <p className="text-2xl text-blue-500">
//           Logged in as {sessionData?.user?.name}
//         </p>
//       )}
//       {secretMessage && (
//         <p className="text-2xl text-blue-500">{secretMessage}</p>
//       )}
//       <button
//         className="rounded-md border border-black bg-violet-50 px-4 py-2 text-xl shadow-lg hover:bg-violet-100"
//         onClick={sessionData ? () => signOut() : () => signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };

// type TechnologyCardProps = {
//   name: string;
//   description: string;
//   documentation: string;
// };

// const TechnologyCard = ({
//   name,
//   description,
//   documentation,
// }: TechnologyCardProps) => {
//   return (
//     <section className="flex flex-col justify-center rounded border-2 border-gray-500 p-6 shadow-xl duration-500 motion-safe:hover:scale-105">
//       <h2 className="text-lg text-gray-700">{name}</h2>
//       <p className="text-sm text-gray-600">{description}</p>
//       <a
//         className="m-auto mt-3 w-fit text-sm text-violet-500 underline decoration-dotted underline-offset-2"
//         href={documentation}
//         target="_blank"
//         rel="noreferrer"
//       >
//         Documentation
//       </a>
//     </section>
//   );
// };
